// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
  output          = "../node_modules/.prisma/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  code                 String    @id @unique
  name                 String
  qty                  Int       @default(1)
  unit                 Unit      @default(kg)
  provider             Provider? @relation(fields: [providerId], references: [id], onDelete: Cascade)
  providerId           Int?
  category             Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  categoryId           Int?
  price                Decimal   @db.Decimal(8, 2)
  blankStock           Int
  blankMinStock        Int       @default(0)
  blankMaxStock        Int
  unregisteredStock    Int
  unregisteredMinStock Int       @default(0)
  unregisteredMaxStock Int
  didOrder             Boolean   @default(false)
  orderedAt            DateTime?
  orders               ProductInOrder[]
  updatedAt            DateTime  @updatedAt
  createdAt            DateTime  @default(now())
}

model Provider {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  phone    Int?
  address  String?
  email    String?
  products Product[]
  orders Order[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model Order {
   id Int @id @default(autoincrement())
   productInOrder ProductInOrder[]
   provider Provider @relation(fields: [providerId], references: [id])
   providerId Int
   createdAt DateTime @default(now())
   file String
}

model ProductInOrder {
   id Int @id @default(autoincrement())
   product Product @relation(fields: [productId], references: [code], onDelete: Cascade)
   productId String
   order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
   orderId Int
   blankQty Int
   unregisteredQty Int
}

model Config {
  key   ConfigKeys @id @unique
  value String
}

enum ConfigKeys {
  password
}

enum Unit {
  g
  kg
  lt
  ml
}
